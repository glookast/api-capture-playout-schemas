apply plugin: "java"
apply plugin: "maven"
apply plugin: "signing"

group = "com.glookast.api"
version = "1.2.0-SNAPSHOT"

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    manifest {
        attributes "Implementation-Version": version
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

configurations {
    schemas
}

dependencies {
    schemas "com.glookast.commons:commons-timecode-schemas:1.3.0"
}

def generatedResourcesDir = file("generated/main/resources")

sourceSets.main.resources.srcDirs generatedResourcesDir

task extractSchemas(type: Copy) {
    from {
        configurations.schemas.collect { zipTree(it) }
    }
    into generatedResourcesDir
    exclude "META-INF/**"
}

processResources.dependsOn(extractSchemas)

clean {
    doLast {
        if (generatedResourcesDir.exists()) {
            generatedResourcesDir.listFiles().each { f -> delete f }
        }
    }
}

task javadocJar(type: Jar) {
    classifier = "javadoc"
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name "api-capture-playout-schemas"
                packaging "jar"
                // optionally artifactId can be defined here
                description "XML schemas and wsdls used for interfacing with Glookast Products"
                url "http://github.com/glookast/api-capture-playout-schemas"

                scm {
                    connection "scm:git:git://github.com/glookast/api-capture-playout-schemas.git"
                    developerConnection "scm:git:ssh://github.com:glookast/api-capture-playout-schemas.git"
                    url "http://github.com/glookast/api-capture-playout-schemas/tree/master"
                }

                licenses {
                    license {
                        name "The Apache License, Version 2.0"
                        url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        id "joostrovers"
                        name "Joost Rovers"
                        email "joost.rovers@glookast.com"
                    }
                }
            }
        }
    }
}